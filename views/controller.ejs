<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content='width=device-width,height=device-height,initial-scale=1.0,maximum-scale=1.0, user-scalable=0'/>
  <style>
    @media only screen and (orientation: portrait) {
      body {
        background-image: url("https://media.giphy.com/media/bD0NmbDsoTzAQ/giphy.gif");
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-position: 50% -30%;
        display:inline-block;
      }

      .hiddenarea, .dpad-pane, .menu-pane, .action-pane, .player-id, .options-button, .options-exit {
        display:none;
      }
    }

    @media only screen and (orientation:landscape) {

     body {
      background-color: #d9d9d9;
      -webkit-user-select:none;
      overflow:hidden;
      height: 100%;
    }

    .dpad-pane {
      position: absolute;
      width: 3.3em;
      height: 2.6em;
      left: 15%;
      top: 32.5%;
    }

    .dpad-hole:before, .dpad-hole:after {
      content: "";
      background-color: gray;
      margin: 7%;
      width: 110%;
      height: 430%;
      position: absolute;
      top: -93%;
      left: 0;
      border-radius: .2em;
      z-index: 1;
    }
    .dpad-pane:after, .dpad-hole:after  {
      transform: rotate(90deg);
    }

    #dpad-body {
      left: 12.3em;
      top: 2.3em;
      position: absolute;
      z-index: 1;
    }
    #dpad .button {
      position: absolute;
      z-index: 2;
      width: 6em;
      height: 6em;
      background-color: rgba(0, 0, 0, 0); /* "transparent" buttons in ie9 aren't clickable, but rgba can be used */
      border: none;
      padding: 0;
      margin: 1.4em -0.3em ;
    }


    .up { top: -5.0em; }

    .right {
      left: 5.0em;
    }

    .down {
      top: 5.0em;
    }

    .left {
      left: -5.0em;
    }

    .joystick-bound {
      position: absolute;
      height: 10em;
      width: 10em;
      left: 2em;
      top: 5.3em;
      background-color: #bdbdbd;
      border-radius: 100%;
    }

    .joystick {
      position: absolute;
      height: 50%;
      width: 50%;
      top: 25%;
      left: 25%;
      background-color: #666666;
      border-radius: 100%;
    }

    .menu-pane {
      display: inline-block;
      vertical-align: top;
      width: 11.5em;
      height: 100%;
      margin-top:50%;
      margin-left:7%;
      border: none;
    }

    .menu-pane .buttons {
      width: 100%;
      height: 3.6em;
      border-radius: .3em;
      border:none;
      position:relative;
    }
    .menu-pane .button {
      position: relative;
      height: 2.2em;
      width: 5.2em;
      border:none;
      background-color: #c3aac4;
      color: #c3aac4;
    }

    .start { float: right; }
    .select { float: left; }

    .action-pane {
      position: absolute;
      width: 2.4em;
      height: 2.4em;
      right: 19%;
      top: 40%;
    }

    .action-pane .label {
      border-radius: 0.4rem;
      width: 4rem;
      height: 4rem;
    }

    .action-pane .button {
      width: 4.3rem;
      height: 4.3rem;
      border-radius: 50%;
      position: absolute;
      border: none;
      padding: 0;
    }

    .action_one { 
      top: -5.3em;
      background-color: #6e99c9;
    }

    .action_two {
      left: 5.3em;
      background-color:#bc4332;
    }

    .action_three {
      margin-top: 5.3em;
      background-color:#bc4332;
    }

    .action_four {
      left: -5.3em;
      background-color: #6e99c9;
    }
    .player-id {
      display: none;
    }

    .joystick-bound {
      display: none;
    }

    .menu-pane button {
      display: none;
    }

    .dpad-option {
      position: absolute;
      height: 3em;
      width: 3em;
      top: 45%;
      left: 18.28%;
      background-color: rgb(200, 200, 200);
      border-radius: 100%;
    }

    .options-button {
      position: fixed;
      width: 15%;
      height: 15%;
      top: 14%;
      left: 0;
      right: 0;
      margin: 0 auto;
      text-align: center;
      font-size: 14px;
      letter-spacing: 0.15em;
      color: rgb(150, 150, 150);
      font-family: Arial, sans-serif;
      font-style: italic;
    }

    .options-container {
      position: absolute;
      height: 110%;
      width: 110%;
      top: -110%;
      background-color: rgba(60, 60, 60, 0.97);
      margin: -5% -5%; 
      padding: 0;
      z-index: 100;
    }

    .options-exit {
      position: absolute;
      width: 100%;
      height: 15%;
      bottom: 14%;
      left: 0;
      right: 0;
      margin: 0 auto;
      text-align: center;
      font-size: 14px;
      letter-spacing: 0.15em;
      color: white;
      font-family: Arial, sans-serif;
      font-style: italic;
    }
  }
</style>

</head>


<body>
  <div class="player-id"><%= pid %></div>

  <div id="hiddenarea">
    <div class="options-button">OPTIONS</div>
    <div class="options-container">
     <div class="dpad-option"></div>
     <div class="options-exit">EXIT</div>
   </div>
   <section class="dpad-pane">
    <div class="dpad-hole"></div>
    <div id="dpad">
      <% dpad.forEach(function(key) { %>
      <button class= "button dpad-key <%= key.id %>" id= "<%= key.press %>"></button>
      <% }); %>
    </div>
  </section>
  <div class="joystick-bound">
    <div class="joystick"></div>
  </div>
  <section class="menu-pane">
    <div class="labels">
      <label class="select" for="select"></label><label class="start" for="start"></label>
    </div>
    <div class="buttons">
      <button class="button select" id="select"></button>
      <button class="button start" id="start"></button>
    </div>
  </section>
  <section class="action-pane">
    <div>
      <% action.forEach(function(key) { %>
      <label class= "label"><button class= "button action <%= key.id %>"" id= "<%= key.press %>"></button></label>
      <% }); %>
    </div>
  </section>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="interact.min.js"></script>
  <script>
    var key_values = [false, false, false, false]; 
    var id_array = ["up", "down", "left", "right", "action_one", "action_two", "action_three", "action_four"]; 
    var fix_x; 
    var fix_y; 
    var radius; 
    var big_height; 
    var expand_options = false; 

    $(document).ready(function() {
      url_id = window.location.pathname.split('/')[1]; 
      var socket = io();
      socket.emit('player-connect', {url: url_id, pid: $('.player-id').html()});

      for (var i = 0; i < 8; i++) {
        $('.' + id_array[i]).bind('touchstart', function(event) {
          var key = $(this).attr('id'); 
          socket.emit('controller-key', {'key': key + '-down', 'url': url_id});
        }); 
        $('.' + id_array[i]).bind('touchend', function(event) {
          var key = $(this).attr('id'); 
          socket.emit('controller-key', {'key': key + '-up', 'url': url_id});
        });
      }

      $('.dpad-option').click(function() {
        $('.dpad-pane').toggle(); 
        $('.joystick-bound').toggle(); 
        fix_x = $('.joystick').offset().left; 
        fix_y = $('.joystick').offset().top; 
        radius = $('.joystick-bound').width() / 2;
      }); 

      document.getElementById( 'select' ).scrollIntoView();

      $(window).on('orientationchange', function(event) {
        fix_x = $('.joystick').offset().left; 
        fix_y = $('.joystick').offset().top;
        big_height = $(window).height(); 
        if (expand_options) {
          $('.options-container').animate({top: '-110%'}, 1); 
          expand_options = false;
        }
      }); 

      $('html, body').on('touchmove', function(e) { 
          //if in minimal-ui, prevent the default
          if (!(window.innerHeight < big_height - 20)) {
            e.preventDefault(); 
          } else {
            location.reload(); 
          }
        });

      $('.options-button').on('touchstart', function(e) {
        if (!expand_options) {
          $('.options-container').animate({top: '0%'}, 500); 
          expand_options = true; 
        }
      }); 

      $('.options-exit').on('touchstart', function(e) {
        if (expand_options) {
          $('.options-container').animate({top: '-110%'}, 300); 
          expand_options = false; 
        }
      }); 

      interact('.joystick').draggable({
        onmove:drag_move, 
        onend:end_return
      });

      function drag_move (event) {

        var curr_x = $('.joystick').position().left; 
        var curr_y = $('.joystick').position().top; 

        if (curr_y < (radius - radius/1.4)) {
          check_key_change (0, true); 
        } else {
          check_key_change (0, false); 
        }

        if (curr_y > radius - radius/2 + radius/1.4) {
          check_key_change (1, true); 
        } else {
          check_key_change (1, false); 
        }

        if (curr_x < (radius - radius/1.4)) {
          check_key_change (2, true);
        } else {
          check_key_change (2, false); 
        }

        if (curr_x > radius - radius/2 + radius/1.4) {
          check_key_change (3, true); 
        } else {
          check_key_change (3, false); 
        }

        var dx = event.dx; 
        var dy = event.dy; 

        var target = event.target,
        x = (parseFloat(target.getAttribute('data-x')) || 0) + dx,
        y = (parseFloat(target.getAttribute('data-y')) || 0) + dy;

        target.style.webkitTransform =
        target.style.transform =
        'translate(' + x + 'px, ' + y + 'px)';

        target.setAttribute('data-x', x);
        target.setAttribute('data-y', y);
      }

      $('.joystick').bind('touchend', function() {
        $('.joystick').offset({top: fix_y, left: fix_x});
      }); 

      function end_return (event) {
        $('.joystick').offset({top: fix_y, left: fix_x});
        check_key_change(0, false); 
        check_key_change(1, false);
        check_key_change(2, false);
        check_key_change(3, false);
      }

      function check_key_change (pos, value) {
        if (key_values[pos] != value) {
          key_values[pos] = value; 

          if (value) {
            var key = $('.' + id_array[pos]).attr('id'); 
            socket.emit('controller-key', {'key': key + '-down', 'url': url_id}); 
          } else {
            var key = $('.' + id_array[pos]).attr('id'); 
            socket.emit('controller-key', {'key': key + '-up', 'url': url_id});
          }
        }
      }

    }); 
  </script>
</div>
</body>
</html>